apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: dind-wld-create
spec:
  workspaces:
      - name: task-shared-data
  params:
    - name: imagename
      description: the operand image

  steps:
    - image: $(params.imagename)
      name: step-wld-cluster-setup
      env:
      # Connect to the sidecar over TCP, with TLS.
      - name: DOCKER_HOST
        value: tcp://localhost:2376
      # Verify TLS.
      - name: DOCKER_TLS_VERIFY
        value: '1'
      # Use the certs generated by the sidecar daemon.
      - name: DOCKER_CERT_PATH
        value: /certs/client
        #workingDir: /tanzu
      script: |
          ls -l
          cd /workspace/task-shared-data
          ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa
          varchange=`cat /root/.ssh/id_rsa.pub`
          sed  "s~WLD_CLUSTER_SSHKEY~$varchange~g" config/deployment-config.yml > replace_deployment.yml
          cp -rf replace_deployment.yml config/deployment-config.yml
          python arcas-tekton-cicd/scripts/__main__.py --root-dir=/workspace/task-shared-data workload-clusters deploy
      volumeMounts:
      - mountPath: /certs/client
        name: dind-certs

  sidecars:
    - image: docker:dind
      name: mgmtserver
      args:
        - --storage-driver=vfs
        - --userland-proxy=false
      securityContext:
        privileged: true
      env:
      # Write generated certs to the path shared with the client.
      - name: DOCKER_TLS_CERTDIR
        value: /certs
      volumeMounts:
      - mountPath: /certs/client
        name: dind-certs
      # Wait for the dind daemon to generate the certs it will share with the
      # client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: ['ls', '/certs/client/ca.pem']
  volumes:
    - name: dind-certs
      emptyDir: {}
